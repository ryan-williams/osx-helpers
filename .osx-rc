#!/usr/bin/env bash

alias sopen='open -a Sublime\ Text.app'

alias flushdns='dscacheutil -flushcache;sudo killall -HUP mDNSResponder'
alias clean_derived="rm -rf ~/Library/Developer/Xcode/DerivedData/"

alias kca="killall CloudApp"

alias ydl=youtube-dl

export music="$HOME/Music"
export m="$music"
export mu="$music"
export im="$music/iTunes/iTunes Media"
export imu="$im/Music"
export ima="$im/Audiobooks"

alias ovlc="open -a /Applications/VLC.app"

defn oa open -a
defn of open -a '/Applications/Finder.app'
defn chrome open -a "\"/Applications/Google Chrome.app\""
defn oc chrome
defn chrm chrome

append_to_path "$HOME/Library/Android/sdk/platform-tools"

export dl="$HOME/Downloads"
export DL="$dl"
export d="$dl"

alias pb=pbpaste
pbp() {
	pbcopy; pbpaste
}
alias pbc=pbcopy
alias pbL="pbpaste | less"

# Like pbcopy, but strip a trailing newline (pasting into bash or other prompts will often unexpectedly execute the pasted text/command otherwise)
copy() {
  cat "$@" | perl -pe 'chomp if eof' | pbcopy
}
export -f copy
defn cy copy
defn cyy pbcopy
ccy() {
	cat "$@" | copy
}
export -f ccy

copy_last_updated() {
  last-updated | copy
}
export -f copy_last_updated
defn clu copy_last_updated
defn luc copy_last_updated

tee_copy() {
  cat "$@" | tee >(copy)
}
export -f tee_copy
defn tcy tee_copy
defn cyt tee_copy

czy() {
  cz "$@" | copy
}
export -f czy

alias pbpn="pbpaste | wc -l"
alias pn="pbpaste | wc -l"
alias pbpl="pbpaste | len"
alias pbl="pbpaste | len"
alias ppl="pbpaste | len"

pwd_copy() {
  pwd | copy
}
export -f pwd_copy
defn pscy pwd_copy

pwd_tee_copy() {
  pwd | tee_copy
}
export -f pwd_tee_copy
defn ptcy pwd_tee_copy
defn pcy pwd_tee_copy

is_osx() {
  uname -a | grep -iq "Darwin"
}

defn osx is_osx

defn shf defaults write com.apple.finder AppleShowAllFiles YES

# Postgres paths
export PGDIR=/Applications/Postgres.app/Contents/MacOS
export PGHOME=$PGDIR/bin

# namei for OSX: brew install mkdryden/homebrew-misc/namei
defn ni namei

alias pbg="pbpaste | gist -pc"

if [ -e "/usr/local/Cellar" ]; then
  export hb=/usr/local/Cellar
fi

if [ -e "/opt/homebrew/bin" ]; then
  export PATH="/opt/homebrew/bin:$PATH"
fi

if [ -s /usr/share/dict/words ]; then
  export dict=/usr/share/dict/words
fi

append_to LIBRARY_PATH /usr/local/opt/openssl/lib


export GOROOT=/usr/local/opt/go/libexec

pyei() {
  CPPFLAGS="-I$(brew --prefix zlib)/include -I$(brew --prefix sqlite)/include" pyenv install "$@"
}
export -f pyei

defn xargs gxargs
defn readlink greadlink

latest_screenshot() {
  dir="${SCREENSHOTS_DIR:-$HOME/Screenshots}"
  last_screenshot="$(ls -t "$dir" | head -n 1)"
  echo "$dir/$last_screenshot"
}
export -f latest_screenshot
defn lsh latest_screenshot

mv_latest_screenshot() {
  if [ $# -gt 1 ]; then
    echo "Usage: $0 [dest]" >&2
    return 1
  fi
  src="$(latest_screenshot)"
  dst="${1:-./}"
  echo "Moving: $src → $dst"
  mv "$src" "$dst"
}
export -f mv_latest_screenshot
defn mvls mv_latest_screenshot

latest_download() {
  dir="${DOWNLOADS_DIR:-$HOME/Downloads}"
  last_download="$(ls -t "$dir" | head -n 1)"
  echo "$dir/$last_download"
}
export -f latest_download
defn ltd latest_download
ls_latest_download() {
  l "$(latest_download)"
}
export -f ls_latest_download
defn lltd ls_latest_download

mv_latest_download() {
  if [ $# -gt 1 ]; then
    echo "Usage: $0 [dest]" >&2
    return 1
  fi
  src="$(latest_download)"
  dst="${1:-./}"
  echo "Moving: $src → $dst"
  mv "$src" "$dst"
}
export -f mv_latest_download
defn mvld mv_latest_download
defn mvdl mv_latest_download

defn o open
open_last_updated() {
  open "$(last-updated "$@")"
}
export -f open_last_updated
defn ol open_last_updated

if which gdate &>/dev/null; then
  defn date gdate
fi

if which gstat &>/dev/null; then
  defn stat gstat
fi

if which gtouch &>/dev/null; then
  defn touch gtouch
fi

if which gsed &>/dev/null; then
  defn sed gsed
fi

alias ibrew='arch -x86_64 /usr/local/bin/brew'

export OPENBLAS="$(brew --prefix openblas)"
export OPENSSL_ROOT_DIR="$(brew --prefix openssl)"

export PYTHON_CONFIGURE_OPTS="--build=aarch64-apple-darwin20.5.0"

# Use GNU coreutils versions of various builtins
export PATH="/opt/homebrew/opt/coreutils/libexec/gnubin:$PATH"
